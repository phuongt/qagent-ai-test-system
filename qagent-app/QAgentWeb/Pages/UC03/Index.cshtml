@page
@model QAgentWeb.Pages.UC03.IndexModel
@using QAgentWeb.Models.Extensions
@{
    ViewData["Title"] = "ISTQB Rules Management - UC03";
    ViewData["Description"] = "Quáº£n lÃ½ quy táº¯c kiá»ƒm thá»­ ISTQB vÃ  Ã¡p dá»¥ng tá»± Ä‘á»™ng";
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-1">ðŸŽ¯ ISTQB Rules Management</h1>
                    <p class="text-muted">Quáº£n lÃ½ quy táº¯c kiá»ƒm thá»­ ISTQB vÃ  Ã¡p dá»¥ng tá»± Ä‘á»™ng cho dá»± Ã¡n</p>
                </div>
                <div>
                    <button class="btn btn-primary">
                        <i class="fas fa-plus"></i> ThÃªm Rule Má»›i
                    </button>
                    <button class="btn btn-outline-secondary">
                        <i class="fas fa-download"></i> Export Rules
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card border-0 bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h5 class="card-title">Total Rules</h5>
                            <h2 class="mb-0">@Model.TotalRules</h2>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-rules-gears fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h5 class="card-title">Active Rules</h5>
                            <h2 class="mb-0">@Model.ActiveRules</h2>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-check-circle fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h5 class="card-title">Applications</h5>
                            <h2 class="mb-0">@Model.TotalApplications</h2>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-play-circle fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h5 class="card-title">Avg Effectiveness</h5>
                            <h2 class="mb-0">@Model.AverageEffectiveness.ToString("F1")</h2>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-chart-line fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Tabs -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <nav class="nav nav-pills">
                        <a class="nav-link @(string.IsNullOrEmpty(Model.SelectedCategory) ? "active" : "")" 
                           asp-page="/UC03/Index">
                            All Categories (@Model.TotalRules)
                        </a>
                        @foreach (var category in Model.RuleCategories)
                        {
                            <a class="nav-link @(Model.SelectedCategory == category.CategoryId ? "active" : "")"
                               asp-page="/UC03/Index" asp-route-category="@category.CategoryId">
                                @category.GetDisplayName() (@category.GetActiveRulesCount())
                            </a>
                        }
                    </nav>
                </div>
            </div>
        </div>
    </div>

    <!-- Rules Table -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="fas fa-list"></i>
                        ISTQB Testing Rules
                        @if (!string.IsNullOrEmpty(Model.SelectedCategory))
                        {
                            var selectedCat = Model.RuleCategories.FirstOrDefault(c => c.CategoryId == Model.SelectedCategory);
                            <span class="text-muted">- @selectedCat?.GetDisplayName()</span>
                        }
                    </h5>
                    <div class="d-flex gap-2">
                        <button class="btn btn-sm btn-outline-primary">
                            <i class="fas fa-filter"></i> Filter
                        </button>
                        <button class="btn btn-sm btn-outline-secondary">
                            <i class="fas fa-sort"></i> Sort
                        </button>
                    </div>
                </div>
                <div class="card-body p-0">
                    @if (Model.TestingRules.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>Rule ID</th>
                                        <th>Rule Name</th>
                                        <th>Category</th>
                                        <th>Type</th>
                                        <th>Priority</th>
                                        <th>Applications</th>
                                        <th>Effectiveness</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var rule in Model.TestingRules)
                                    {
                                        var applications = rule.ApplicationLogs?.Count(l => l.WasSuccessful) ?? 0;
                                        var effectivenessLogs = rule.ApplicationLogs?
                                            .Where(l => l.WasSuccessful && l.EffectivenessScore.HasValue)
                                            .ToList();
                                        var effectiveness = effectivenessLogs?.Any() == true 
                                            ? effectivenessLogs.Average(l => l.EffectivenessScore!.Value) 
                                            : 0.0;
                                        
                                        <tr>
                                            <td>
                                                <code class="text-primary">@rule.RuleId</code>
                                            </td>
                                            <td>
                                                <div>
                                                    <strong>@rule.RuleName</strong>
                                                    @if (!string.IsNullOrEmpty(rule.Description))
                                                    {
                                                        <br>
                                                        <small class="text-muted">@rule.Description.Substring(0, Math.Min(100, rule.Description.Length))@(rule.Description.Length > 100 ? "..." : "")</small>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge bg-secondary">@rule.GetCategoryDisplayName()</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-info">@(System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(rule.RuleType.Replace("_", " ")))</span>
                                            </td>
                                            <td>
                                                <span class="badge @rule.GetPriorityBadgeClass()">
                                                    Priority @rule.Priority
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge bg-light text-dark">@applications times</span>
                                            </td>
                                            <td>
                                                @if (effectiveness > 0)
                                                {
                                                    <span class="badge @GetEffectivenessBadgeClass(effectiveness)">
                                                        @effectiveness.ToString("F1")/10
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">N/A</span>
                                                }
                                            </td>
                                            <td>
                                                @if (rule.IsActive)
                                                {
                                                    <span class="badge bg-success">Active</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">Inactive</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm">
                                                    <button class="btn btn-outline-primary" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    <button class="btn btn-outline-secondary" title="Edit Rule">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                    <button class="btn btn-outline-success" title="Apply Rule">
                                                        <i class="fas fa-play"></i>
                                                    </button>
                                                    <button class="btn btn-outline-danger" title="Delete Rule">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-search fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No testing rules found</h5>
                            <p class="text-muted">
                                @if (!string.IsNullOrEmpty(Model.SelectedCategory))
                                {
                                    <text>No rules found for the selected category.</text>
                                }
                                else
                                {
                                    <text>Get started by creating your first ISTQB testing rule.</text>
                                }
                            </p>
                            <button class="btn btn-primary">
                                <i class="fas fa-plus"></i> Create First Rule
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetEffectivenessBadgeClass(double effectiveness)
    {
        return effectiveness switch
        {
            >= 8.0 => "bg-success",
            >= 6.0 => "bg-primary",
            >= 4.0 => "bg-warning",
            >= 2.0 => "bg-orange",
            _ => "bg-danger"
        };
    }
}

@section Scripts {
    <script>
        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[title]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });

        // Rule action handlers
        function viewRule(ruleId) {
            // Implement view rule details
            console.log('View rule:', ruleId);
        }

        function editRule(ruleId) {
            // Implement edit rule
            console.log('Edit rule:', ruleId);
        }

        function applyRule(ruleId) {
            // Implement apply rule
            console.log('Apply rule:', ruleId);
        }

        function deleteRule(ruleId) {
            if (confirm('Are you sure you want to delete this rule?')) {
                // Implement delete rule
                console.log('Delete rule:', ruleId);
            }
        }
    </script>
}

<style>
    .nav-pills .nav-link {
        margin-right: 0.5rem;
        border-radius: 0.375rem;
    }
    
    .nav-pills .nav-link.active {
        background-color: var(--bs-primary);
    }
    
    .table th {
        font-weight: 600;
        border-bottom: 2px solid #dee2e6;
    }
    
    .badge {
        font-size: 0.75em;
    }
    
    .btn-group-sm > .btn {
        padding: 0.25rem 0.4rem;
        font-size: 0.7rem;
    }
    
    .bg-orange {
        background-color: #fd7e14 !important;
    }
</style> 